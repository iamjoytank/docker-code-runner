version: '3.8'

services:
  node-compiler:
    build:
      context: .
      args:
        # Pass the host's docker group ID to the build
        # This command gets the GID of the 'docker' group on the machine running docker-compose
        DOCKER_GID: "999"
    container_name: node-compiler
    ports:
      - "3000:3000"
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      # Keep code sync for development (optional, remove for production build)
      - .:/app
      # Mount the named volume to the code directory
      - code_execution_volume:/app/code
      # Use a named volume for node_modules to avoid being overwritten by the bind mount
      - node_modules:/app/node_modules
      # Mount the host Docker socket
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REDIS_HOST=redis
      # Add NODE_ENV if needed, e.g., development or production
      # - NODE_ENV=development

  redis:
    image: redis:alpine
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    # No need for command binding if using default redis port and allowing connections

volumes: # Define the named volume
  code_execution_volume:
    name: code_execution_volume
  node_modules: